diff --git a/mibs/cisco/cat3750/v2/CISCO-FLASH-MIB.my b/mibs/cisco/cat3750/v2/CISCO-FLASH-MIB.my
index 9ca36b2..e825448 100644
--- a/mibs/cisco/cat3750/v2/CISCO-FLASH-MIB.my
+++ b/mibs/cisco/cat3750/v2/CISCO-FLASH-MIB.my
@@ -1,8 +1,8 @@
 -- *****************************************************************
 -- CISCO-FLASH-MIB.my:  Cisco Flash MIB file
---   
+--
 -- April 1995, Ashwin Baindur
---   
+--
 -- Copyright (c) 1995-2009, 2011, 2013 by cisco Systems Inc.
 -- All rights reserved.
 -- *****************************************************************
@@ -210,7 +210,7 @@ ChecksumString ::= TEXTUAL-CONVENTION
     STATUS          current
     DESCRIPTION
         "Represents the checksum of a file."
-    SYNTAX          OCTET STRING
+    SYNTAX          DisplayString
 
 FlashFileType ::= TEXTUAL-CONVENTION
     STATUS          current
@@ -248,7 +248,7 @@ ciscoFlashCfg  OBJECT IDENTIFIER
 
 
 -- An overview
---   
+--
 -- This MIB is organized hierarchically as follows :
 -- Device information :
 -- * device level info
@@ -262,7 +262,7 @@ ciscoFlashCfg  OBJECT IDENTIFIER
 -- Traps
 -- * operation completion traps
 -- * device change trap
---   
+--
 -- It is organized into the following groups :
 -- Information groups :
 -- Device info group (mandatory device information)
@@ -284,14 +284,14 @@ ciscoFlashCfg  OBJECT IDENTIFIER
 -- Chip information group (mandatory)
 -- The chip information group contains objects required for
 -- error diagnosis/investigation.
---   
+--
 -- Operations groups :
 -- File copy operations group (mandatory)
 -- Partitioning operations group (optional)
 -- Miscellaneous operations group (optional)
---   
+--
 
---   
+--
 -- Flash Device level information
 
 ciscoFlashDevicesSupported OBJECT-TYPE
@@ -302,11 +302,11 @@ ciscoFlashDevicesSupported OBJECT-TYPE
         "Number of Flash devices supported by the system.
         If the system does not support any Flash devices, this
         MIB will not be loaded on that system. The value of this
-        object will therefore be atleast 1." 
+        object will therefore be atleast 1."
     ::= { ciscoFlashDevice 1 }
 
 ciscoFlashDeviceTable OBJECT-TYPE
-    SYNTAX          SEQUENCE OF CiscoFlashDeviceEntry 
+    SYNTAX          SEQUENCE OF CiscoFlashDeviceEntry
     MAX-ACCESS      not-accessible
     STATUS          current
     DESCRIPTION
@@ -352,7 +352,7 @@ ciscoFlashDeviceEntry OBJECT-TYPE
         the table even when they have been removed. However,
         a non-removable device that has not been installed
         will not have an entry in the table."
-    INDEX           { ciscoFlashDeviceIndex } 
+    INDEX           { ciscoFlashDeviceIndex }
     ::= { ciscoFlashDeviceTable 1 }
 
 CiscoFlashDeviceEntry ::= SEQUENCE {
@@ -384,7 +384,7 @@ ciscoFlashDeviceIndex OBJECT-TYPE
         table of initialized flash devices.
         The lowest value should be 1. The highest should be
         less than or equal to the value of the
-        ciscoFlashDevicesSupported object." 
+        ciscoFlashDevicesSupported object."
     ::= { ciscoFlashDeviceEntry 1 }
 
 ciscoFlashDeviceSize OBJECT-TYPE
@@ -401,7 +401,7 @@ ciscoFlashDeviceSize OBJECT-TYPE
         maximum value reportable by this object then this object
         should report its maximum value(4,294,967,295) and
         ciscoFlashDeviceSizeExtended must be used to report the
-        flash device's size." 
+        flash device's size."
     ::= { ciscoFlashDeviceEntry 2 }
 
 ciscoFlashDeviceMinPartitionSize OBJECT-TYPE
@@ -443,7 +443,7 @@ ciscoFlashDeviceMinPartitionSize OBJECT-TYPE
         maximum value reportable by this object then this object should
         report its maximum value(4,294,967,295) and
         ciscoFlashDeviceMinPartitionSizeExtended must be used to report
-        the flash device's minimum partition size." 
+        the flash device's minimum partition size."
     ::= { ciscoFlashDeviceEntry 3 }
 
 ciscoFlashDeviceMaxPartitions OBJECT-TYPE
@@ -466,7 +466,7 @@ ciscoFlashDeviceMaxPartitions OBJECT-TYPE
         system.
         For systems executing code out of DRAM, partitioning
         gives a way of sub-dividing a large Flash device for
-        easier management of files." 
+        easier management of files."
     ::= { ciscoFlashDeviceEntry 4 }
 
 ciscoFlashDevicePartitions OBJECT-TYPE
@@ -483,7 +483,7 @@ ciscoFlashDevicePartitions OBJECT-TYPE
         spans the entire device (actually no partitioning).
         A partition will contain one or more minimum partition
         units (where a minimum partition unit is defined by
-        ciscoFlashDeviceMinPartitionSize)." 
+        ciscoFlashDeviceMinPartitionSize)."
     ::= { ciscoFlashDeviceEntry 5 }
 
 ciscoFlashDeviceChipCount OBJECT-TYPE
@@ -496,7 +496,7 @@ ciscoFlashDeviceChipCount OBJECT-TYPE
         upfront to a management station on how much chip info
         to expect and possibly help double check the chip index
         against an upper limit when randomly retrieving chip
-        info for a partition." 
+        info for a partition."
     ::= { ciscoFlashDeviceEntry 6 }
 
 ciscoFlashDeviceName OBJECT-TYPE
@@ -515,7 +515,7 @@ ciscoFlashDeviceName OBJECT-TYPE
         operation is being done on the default device, or,
         the system supports only a single Flash device.
         The device name will always be available for a
-        removable device, even when the device has been removed." 
+        removable device, even when the device has been removed."
     ::= { ciscoFlashDeviceEntry 7 }
 
 ciscoFlashDeviceDescr OBJECT-TYPE
@@ -535,7 +535,7 @@ ciscoFlashDeviceDescr OBJECT-TYPE
         expected to collectively give all information about a
         Flash device.
         The device description will always be available for a
-        removable device, even when the device has been removed." 
+        removable device, even when the device has been removed."
     ::= { ciscoFlashDeviceEntry 8 }
 
 ciscoFlashDeviceController OBJECT-TYPE
@@ -553,7 +553,7 @@ ciscoFlashDeviceController OBJECT-TYPE
         may contain a description of that controller chip.
         Where irrelevant (Flash is a direct memory mapped device
         accessed directly by the main processor), this object will
-        have an empty (NULL) string." 
+        have an empty (NULL) string."
     ::= { ciscoFlashDeviceEntry 9 }
 
 ciscoFlashDeviceCard OBJECT-TYPE
@@ -569,7 +569,7 @@ ciscoFlashDeviceCard OBJECT-TYPE
         card such as the MC.
         This object will therefore be used to essentially index
         into cardTable to retrieve details about the card such as
-        cardDescr, cardSlotNumber, etc." 
+        cardDescr, cardSlotNumber, etc."
     ::= { ciscoFlashDeviceEntry 10 }
 
 ciscoFlashDeviceProgrammingJumper OBJECT-TYPE
@@ -603,7 +603,7 @@ ciscoFlashDeviceProgrammingJumper OBJECT-TYPE
         ciscoFlashPartitionStatus object whenever that object has
         the readOnly(1) value. In such a case, this object will
         indicate whether the programming jumper is a possible reason
-        for the readOnly state." 
+        for the readOnly state."
     ::= { ciscoFlashDeviceEntry 11 }
 
 ciscoFlashDeviceInitTime OBJECT-TYPE
@@ -628,7 +628,7 @@ ciscoFlashDeviceInitTime OBJECT-TYPE
         running time maintained by the system. This running
         time starts from zero when the system boots up.
         For a removable device that has been removed, this
-        value will be zero." 
+        value will be zero."
     ::= { ciscoFlashDeviceEntry 12 }
 
 ciscoFlashDeviceRemovable OBJECT-TYPE
@@ -645,7 +645,7 @@ ciscoFlashDeviceRemovable OBJECT-TYPE
         Further, removable Flash devices are expected to have
         the necessary hardware support -
           1. on-line removal and insertion
-          2. interrupt generation on removal or insertion." 
+          2. interrupt generation on removal or insertion."
     ::= { ciscoFlashDeviceEntry 13 }
 
 ciscoFlashPhyEntIndex OBJECT-TYPE
@@ -655,7 +655,7 @@ ciscoFlashPhyEntIndex OBJECT-TYPE
     DESCRIPTION
         "This object indicates the physical entity index of a
         physical entity in entPhysicalTable which the flash
-        device actually located." 
+        device actually located."
     ::= { ciscoFlashDeviceEntry 14 }
 
 ciscoFlashDeviceNameExtended OBJECT-TYPE
@@ -676,7 +676,7 @@ ciscoFlashDeviceNameExtended OBJECT-TYPE
         default device, or, the system supports only a single
         Flash device. The device name will always be available
         for a removable device, even when the device has been
-        removed." 
+        removed."
     ::= { ciscoFlashDeviceEntry 15 }
 
 ciscoFlashDeviceSizeExtended OBJECT-TYPE
@@ -689,7 +689,7 @@ ciscoFlashDeviceSizeExtended OBJECT-TYPE
         For a removable device, the size will be zero if
         the device has been removed.
 
-        This object is a 64-bit version of ciscoFlashDeviceSize." 
+        This object is a 64-bit version of ciscoFlashDeviceSize."
     ::= { ciscoFlashDeviceEntry 16 }
 
 ciscoFlashDeviceMinPartitionSizeExtended OBJECT-TYPE
@@ -698,10 +698,10 @@ ciscoFlashDeviceMinPartitionSizeExtended OBJECT-TYPE
     STATUS          current
     DESCRIPTION
         "This object provides the minimum partition size supported for
-        this device. This object is a 64-bit version of 
-        ciscoFlashDeviceMinPatitionSize." 
+        this device. This object is a 64-bit version of
+        ciscoFlashDeviceMinPatitionSize."
     ::= { ciscoFlashDeviceEntry 17 }
- 
+
 
 -- Flash device sub group : Chip level information
 
@@ -710,7 +710,7 @@ ciscoFlashChips  OBJECT IDENTIFIER
 
 
 ciscoFlashChipTable OBJECT-TYPE
-    SYNTAX          SEQUENCE OF CiscoFlashChipEntry 
+    SYNTAX          SEQUENCE OF CiscoFlashChipEntry
     MAX-ACCESS      not-accessible
     STATUS          current
     DESCRIPTION
@@ -733,7 +733,7 @@ ciscoFlashChipEntry OBJECT-TYPE
     INDEX           {
                         ciscoFlashDeviceIndex,
                         ciscoFlashChipIndex
-                    } 
+                    }
     ::= { ciscoFlashChipTable 1 }
 
 CiscoFlashChipEntry ::= SEQUENCE {
@@ -758,7 +758,7 @@ ciscoFlashChipIndex OBJECT-TYPE
         When retrieving chip information for chips within a
         partition, the sequence number should lie between
         ciscoFlashPartitionStartChip & ciscoFlashPartitionEndChip
-        (both inclusive)." 
+        (both inclusive)."
     ::= { ciscoFlashChipEntry 1 }
 
 ciscoFlashChipCode OBJECT-TYPE
@@ -775,7 +775,7 @@ ciscoFlashChipCode OBJECT-TYPE
         Since programming algorithms differ from chip type to
         chip type, this chip code should be used to determine
         which algorithms to use (and thereby whether the chip
-        is supported in the first place)." 
+        is supported in the first place)."
     ::= { ciscoFlashChipEntry 2 }
 
 ciscoFlashChipDescr OBJECT-TYPE
@@ -796,7 +796,7 @@ ciscoFlashChipDescr OBJECT-TYPE
         chip code and the chip description in conjunction
         to provide additional information whenever the
         ciscoFlashPartitionStatus object has the readOnly(1)
-        value." 
+        value."
     ::= { ciscoFlashChipEntry 3 }
 
 ciscoFlashChipWriteRetries OBJECT-TYPE
@@ -816,7 +816,7 @@ ciscoFlashChipWriteRetries OBJECT-TYPE
         in that partition. To keep a track of retries for
         a given write operation, the management station would
         have to retrieve the values for the concerned chips
-        before and after any write operation." 
+        before and after any write operation."
     ::= { ciscoFlashChipEntry 4 }
 
 ciscoFlashChipEraseRetries OBJECT-TYPE
@@ -838,7 +838,7 @@ ciscoFlashChipEraseRetries OBJECT-TYPE
         have to retrieve the values for the concerned chips
         before and after any erase operation.
         Note that erase may be done through an independent
-        command, or through a copy-to-flash command." 
+        command, or through a copy-to-flash command."
     ::= { ciscoFlashChipEntry 5 }
 
 ciscoFlashChipMaxWriteRetries OBJECT-TYPE
@@ -847,7 +847,7 @@ ciscoFlashChipMaxWriteRetries OBJECT-TYPE
     STATUS          current
     DESCRIPTION
         "The maximum number of write retries done at any
-        single location before declaring a write failure." 
+        single location before declaring a write failure."
     ::= { ciscoFlashChipEntry 6 }
 
 ciscoFlashChipMaxEraseRetries OBJECT-TYPE
@@ -856,12 +856,12 @@ ciscoFlashChipMaxEraseRetries OBJECT-TYPE
     STATUS          current
     DESCRIPTION
         "The maximum number of erase retries done within
-        an erase sector before declaring an erase failure." 
+        an erase sector before declaring an erase failure."
     ::= { ciscoFlashChipEntry 7 }
- 
+
 
 -- Flash device sub group : Partition level information
---   
+--
 -- Flash Partition level information :
 -- A flash partition is a logical sub-division of a flash
 -- device and may or may not be equal to the entire device
@@ -889,7 +889,7 @@ ciscoFlashPartitions  OBJECT IDENTIFIER
 
 
 ciscoFlashPartitionTable OBJECT-TYPE
-    SYNTAX          SEQUENCE OF CiscoFlashPartitionEntry 
+    SYNTAX          SEQUENCE OF CiscoFlashPartitionEntry
     MAX-ACCESS      not-accessible
     STATUS          current
     DESCRIPTION
@@ -912,7 +912,7 @@ ciscoFlashPartitionEntry OBJECT-TYPE
     INDEX           {
                         ciscoFlashDeviceIndex,
                         ciscoFlashPartitionIndex
-                    } 
+                    }
     ::= { ciscoFlashPartitionTable 1 }
 
 CiscoFlashPartitionEntry ::= SEQUENCE {
@@ -939,7 +939,7 @@ ciscoFlashPartitionIndex OBJECT-TYPE
     STATUS          current
     DESCRIPTION
         "Flash partition sequence number used to index within
-        table of initialized flash partitions." 
+        table of initialized flash partitions."
     ::= { ciscoFlashPartitionEntry 1 }
 
 ciscoFlashPartitionStartChip OBJECT-TYPE
@@ -948,7 +948,7 @@ ciscoFlashPartitionStartChip OBJECT-TYPE
     STATUS          current
     DESCRIPTION
         "Chip sequence number of first chip in partition.
-        Used as an index into the chip table." 
+        Used as an index into the chip table."
     ::= { ciscoFlashPartitionEntry 2 }
 
 ciscoFlashPartitionEndChip OBJECT-TYPE
@@ -957,7 +957,7 @@ ciscoFlashPartitionEndChip OBJECT-TYPE
     STATUS          current
     DESCRIPTION
         "Chip sequence number of last chip in partition.
-        Used as an index into the chip table." 
+        Used as an index into the chip table."
     ::= { ciscoFlashPartitionEntry 3 }
 
 ciscoFlashPartitionSize OBJECT-TYPE
@@ -975,7 +975,7 @@ ciscoFlashPartitionSize OBJECT-TYPE
         maximum value reportable by this object then this object
         should report its maximum value(4,294,967,295) and
         ciscoFlashPartitionSizeExtended must be used to report the
-        flash partition's size." 
+        flash partition's size."
     ::= { ciscoFlashPartitionEntry 4 }
 
 ciscoFlashPartitionFreeSpace OBJECT-TYPE
@@ -1009,7 +1009,7 @@ ciscoFlashPartitionFreeSpace OBJECT-TYPE
         the maximum value reportable by this object then this object
         should report its maximum value(4,294,967,295) and
         ciscoFlashPartitionFreeSpaceExtended
-        must be used to report the flash partition's free space." 
+        must be used to report the flash partition's free space."
     ::= { ciscoFlashPartitionEntry 5 }
 
 ciscoFlashPartitionFileCount OBJECT-TYPE
@@ -1019,7 +1019,7 @@ ciscoFlashPartitionFileCount OBJECT-TYPE
     DESCRIPTION
         "Count of all files in a flash partition. Both
         good and bad (deleted or invalid checksum) files
-        will be included in this count." 
+        will be included in this count."
     ::= { ciscoFlashPartitionEntry 6 }
 
 ciscoFlashPartitionChecksumAlgorithm OBJECT-TYPE
@@ -1048,7 +1048,7 @@ ciscoFlashPartitionChecksumAlgorithm OBJECT-TYPE
         the file download to Flash was error free.
         simpleChecksum represents a simple 1s complement
         addition of short word values. Other algorithm
-        values will be added as necessary." 
+        values will be added as necessary."
     ::= { ciscoFlashPartitionEntry 7 }
 
 ciscoFlashPartitionStatus OBJECT-TYPE
@@ -1077,7 +1077,7 @@ ciscoFlashPartitionStatus OBJECT-TYPE
         indicate whether the Flash Load Helper can be used
         to write a file to this partition or not.
 
-        * readWrite if partition is programmable." 
+        * readWrite if partition is programmable."
     ::= { ciscoFlashPartitionEntry 8 }
 
 ciscoFlashPartitionUpgradeMethod OBJECT-TYPE
@@ -1113,7 +1113,7 @@ ciscoFlashPartitionUpgradeMethod OBJECT-TYPE
                         will automatically reload the Rxboot image
                         in ROM and direct it to carry out the
                         download request.
-        direct       -  will be done directly by this image." 
+        direct       -  will be done directly by this image."
     ::= { ciscoFlashPartitionEntry 9 }
 
 ciscoFlashPartitionName OBJECT-TYPE
@@ -1137,7 +1137,7 @@ ciscoFlashPartitionName OBJECT-TYPE
         a partition name is not specified.
         The partition name is therefore mandatory except when
         the operation is being done on the default partition, or
-        the device has just one partition (is not partitioned)." 
+        the device has just one partition (is not partitioned)."
     ::= { ciscoFlashPartitionEntry 10 }
 
 ciscoFlashPartitionNeedErasure OBJECT-TYPE
@@ -1160,7 +1160,7 @@ ciscoFlashPartitionNeedErasure OBJECT-TYPE
         command.
         If a copyToFlashWithoutErase(2) command is issued
         when this object has the TRUE value, the command
-        will fail." 
+        will fail."
     ::= { ciscoFlashPartitionEntry 11 }
 
 ciscoFlashPartitionFileNameLength OBJECT-TYPE
@@ -1175,7 +1175,7 @@ ciscoFlashPartitionFileNameLength OBJECT-TYPE
         support a max length of at least 48 bytes.
         A management entity must use this object when
         prompting a user for, or deriving the Flash file
-        name length." 
+        name length."
     ::= { ciscoFlashPartitionEntry 12 }
 
 ciscoFlashPartitionSizeExtended OBJECT-TYPE
@@ -1189,7 +1189,7 @@ ciscoFlashPartitionSizeExtended OBJECT-TYPE
         If there is a single partition, this size will be equal
         to ciscoFlashDeviceSize.
 
-        This object is a 64-bit version of ciscoFlashPartitionSize" 
+        This object is a 64-bit version of ciscoFlashPartitionSize"
     ::= { ciscoFlashPartitionEntry 13 }
 
 ciscoFlashPartitionFreeSpaceExtended OBJECT-TYPE
@@ -1219,7 +1219,7 @@ ciscoFlashPartitionFreeSpaceExtended OBJECT-TYPE
         A partition may have to be erased in order to reclaim
         the space occupied by files.
 
-        This object is a 64-bit version of ciscoFlashPartitionFreeSpace" 
+        This object is a 64-bit version of ciscoFlashPartitionFreeSpace"
     ::= { ciscoFlashPartitionEntry 14 }
 
 ciscoFlashPartitionLowSpaceNotifThreshold OBJECT-TYPE
@@ -1233,9 +1233,9 @@ ciscoFlashPartitionLowSpaceNotifThreshold OBJECT-TYPE
         ciscoFlashPartionLowSpaceNotifEnable is set to true,
         ciscoFlashPartitionLowSpaceNotif will be generated. When the
         available free space comes back to the threshold value
-        ciscoFlashPartionLowSpaceRecoveryNotif will be generated." 
+        ciscoFlashPartionLowSpaceRecoveryNotif will be generated."
     ::= { ciscoFlashPartitionEntry 15 }
- 
+
 
 -- Flash partition sub group : File level information
 
@@ -1244,7 +1244,7 @@ ciscoFlashFiles  OBJECT IDENTIFIER
 
 
 ciscoFlashFileTable OBJECT-TYPE
-    SYNTAX          SEQUENCE OF CiscoFlashFileEntry 
+    SYNTAX          SEQUENCE OF CiscoFlashFileEntry
     MAX-ACCESS      not-accessible
     STATUS          current
     DESCRIPTION
@@ -1266,7 +1266,7 @@ ciscoFlashFileEntry OBJECT-TYPE
                         ciscoFlashDeviceIndex,
                         ciscoFlashPartitionIndex,
                         ciscoFlashFileIndex
-                    } 
+                    }
     ::= { ciscoFlashFileTable 1 }
 
 CiscoFlashFileEntry ::= SEQUENCE {
@@ -1285,7 +1285,7 @@ ciscoFlashFileIndex OBJECT-TYPE
     STATUS          current
     DESCRIPTION
         "Flash file sequence number used to index within
-        a Flash partition directory table." 
+        a Flash partition directory table."
     ::= { ciscoFlashFileEntry 1 }
 
 ciscoFlashFileSize OBJECT-TYPE
@@ -1296,7 +1296,7 @@ ciscoFlashFileSize OBJECT-TYPE
     DESCRIPTION
         "Size of the file in bytes. Note that this size does
         not include the size of the filesystem file header.
-        File size will always be non-zero." 
+        File size will always be non-zero."
     ::= { ciscoFlashFileEntry 2 }
 
 ciscoFlashFileChecksum OBJECT-TYPE
@@ -1312,7 +1312,7 @@ ciscoFlashFileChecksum OBJECT-TYPE
         internally in hexadecimal form, this object will
         provide the checksum in a string form.
         The checksum will be available for all valid and
-        invalid-checksum files." 
+        invalid-checksum files."
     ::= { ciscoFlashFileEntry 3 }
 
 ciscoFlashFileStatus OBJECT-TYPE
@@ -1337,7 +1337,7 @@ ciscoFlashFileStatus OBJECT-TYPE
         the file. Incomplete files (files truncated either
         because of lack of free space, or a network download
         failure) are also written with a bad checksum and
-        marked as invalid." 
+        marked as invalid."
     ::= { ciscoFlashFileEntry 4 }
 
 ciscoFlashFileName OBJECT-TYPE
@@ -1349,7 +1349,7 @@ ciscoFlashFileName OBJECT-TYPE
         the file. The name should not include the colon (:)
         character as it is a special separator character used
         to delineate the device name, partition name, and the
-        file name." 
+        file name."
     ::= { ciscoFlashFileEntry 5 }
 
 ciscoFlashFileType OBJECT-TYPE
@@ -1357,7 +1357,7 @@ ciscoFlashFileType OBJECT-TYPE
     MAX-ACCESS      read-only
     STATUS          current
     DESCRIPTION
-        "Type of the file." 
+        "Type of the file."
     ::= { ciscoFlashFileEntry 6 }
 
 ciscoFlashFileDate OBJECT-TYPE
@@ -1365,13 +1365,13 @@ ciscoFlashFileDate OBJECT-TYPE
     MAX-ACCESS      read-only
     STATUS          current
     DESCRIPTION
-        "The time at which this file was created." 
+        "The time at which this file was created."
     ::= { ciscoFlashFileEntry 7 }
- 
+
 
 
 ciscoFlashFileByTypeTable OBJECT-TYPE
-    SYNTAX          SEQUENCE OF CiscoFlashFileByTypeEntry 
+    SYNTAX          SEQUENCE OF CiscoFlashFileByTypeEntry
     MAX-ACCESS      not-accessible
     STATUS          current
     DESCRIPTION
@@ -1403,7 +1403,7 @@ ciscoFlashFileByTypeEntry OBJECT-TYPE
                         ciscoFlashDeviceIndex,
                         ciscoFlashPartitionIndex,
                         ciscoFlashFileIndex
-                    } 
+                    }
     ::= { ciscoFlashFileByTypeTable 1 }
 
 CiscoFlashFileByTypeEntry ::= SEQUENCE {
@@ -1422,7 +1422,7 @@ ciscoFlashFileByTypeSize OBJECT-TYPE
     DESCRIPTION
         "This object represents exactly the
         same info as ciscoFlashFileSize
-        object in ciscoFlashFileTable." 
+        object in ciscoFlashFileTable."
     ::= { ciscoFlashFileByTypeEntry 1 }
 
 ciscoFlashFileByTypeChecksum OBJECT-TYPE
@@ -1432,7 +1432,7 @@ ciscoFlashFileByTypeChecksum OBJECT-TYPE
     DESCRIPTION
         "This object represents exactly the
         same info as ciscoFlashFileChecksum
-        object in ciscoFlashFileTable." 
+        object in ciscoFlashFileTable."
     ::= { ciscoFlashFileByTypeEntry 2 }
 
 ciscoFlashFileByTypeStatus OBJECT-TYPE
@@ -1446,7 +1446,7 @@ ciscoFlashFileByTypeStatus OBJECT-TYPE
     DESCRIPTION
         "This object represents exactly the
         same info as ciscoFlashFileStatus
-        object in ciscoFlashFileTable." 
+        object in ciscoFlashFileTable."
     ::= { ciscoFlashFileByTypeEntry 3 }
 
 ciscoFlashFileByTypeName OBJECT-TYPE
@@ -1456,7 +1456,7 @@ ciscoFlashFileByTypeName OBJECT-TYPE
     DESCRIPTION
         "This object represents exactly the
         same info as ciscoFlashFileName
-        object in ciscoFlashFileTable." 
+        object in ciscoFlashFileTable."
     ::= { ciscoFlashFileByTypeEntry 4 }
 
 ciscoFlashFileByTypeDate OBJECT-TYPE
@@ -1466,9 +1466,9 @@ ciscoFlashFileByTypeDate OBJECT-TYPE
     DESCRIPTION
         "This object represents exactly the
         same info as ciscoFlashFileDate
-        object in ciscoFlashFileTable." 
+        object in ciscoFlashFileTable."
     ::= { ciscoFlashFileByTypeEntry 5 }
- 
+
 
 -- End of Flash information
 -- Start of Flash operations
@@ -1478,7 +1478,7 @@ ciscoFlashFileByTypeDate OBJECT-TYPE
 -- misc (erasing, file verification, ...)
 
 ciscoFlashCopyTable OBJECT-TYPE
-    SYNTAX          SEQUENCE OF CiscoFlashCopyEntry 
+    SYNTAX          SEQUENCE OF CiscoFlashCopyEntry
     MAX-ACCESS      not-accessible
     STATUS          current
     DESCRIPTION
@@ -1524,7 +1524,7 @@ ciscoFlashCopyEntry OBJECT-TYPE
         entries from clogging the table, entries will be aged out,
         but an entry will never be deleted within 5 minutes of
         completing."
-    INDEX           { ciscoFlashCopySerialNumber } 
+    INDEX           { ciscoFlashCopySerialNumber }
     ::= { ciscoFlashCopyTable 1 }
 
 CiscoFlashCopyEntry ::= SEQUENCE {
@@ -1554,7 +1554,7 @@ ciscoFlashCopySerialNumber OBJECT-TYPE
         table. A management station wishing to initiate a
         copy operation should use a pseudo-random value for
         this object when creating or modifying an instance of
-        a ciscoFlashCopyEntry." 
+        a ciscoFlashCopyEntry."
     ::= { ciscoFlashCopyEntry 1 }
 
 ciscoFlashCopyCommand OBJECT-TYPE
@@ -1619,7 +1619,7 @@ ciscoFlashCopyCommand OBJECT-TYPE
         copyFromFlhLog          CopyProtocol
                                 CopyServerAddress
                                 CopyDestinationName
-                                CopyNotifyOnCompletion (opt)" 
+                                CopyNotifyOnCompletion (opt)"
     ::= { ciscoFlashCopyEntry 2 }
 
 ciscoFlashCopyProtocol OBJECT-TYPE
@@ -1642,7 +1642,7 @@ ciscoFlashCopyProtocol OBJECT-TYPE
         maybe the image type (subset type), a management
         station would be expected to somehow determine
         the protocol support for a command."
-    DEFVAL          { tftp } 
+    DEFVAL          { tftp }
     ::= { ciscoFlashCopyEntry 3 }
 
 ciscoFlashCopyServerAddress OBJECT-TYPE
@@ -1656,7 +1656,7 @@ ciscoFlashCopyServerAddress OBJECT-TYPE
         Since this object can just hold only IPv4 Transport
         type, it is deprecated and replaced by
         ciscoFlashCopyServerAddrRev1."
-    DEFVAL          { 'FFFFFFFF'H } 
+    DEFVAL          { 'FFFFFFFF'H }
     ::= { ciscoFlashCopyEntry 4 }
 
 ciscoFlashCopySourceName OBJECT-TYPE
@@ -1684,7 +1684,7 @@ ciscoFlashCopySourceName OBJECT-TYPE
 
         For a copy to Flash, the file name will be as per
         the file naming conventions and path to the file on
-        the server." 
+        the server."
     ::= { ciscoFlashCopyEntry 5 }
 
 ciscoFlashCopyDestinationName OBJECT-TYPE
@@ -1719,7 +1719,7 @@ ciscoFlashCopyDestinationName OBJECT-TYPE
         For a copy from Flash via lex, this string will consist
         of numeric characters specifying the interface on the
         lex box that will receive the source flash image."
-    DEFVAL          { ''B } 
+    DEFVAL          { ''B }
     ::= { ciscoFlashCopyEntry 6 }
 
 ciscoFlashCopyRemoteUserName OBJECT-TYPE
@@ -1736,7 +1736,7 @@ ciscoFlashCopyRemoteUserName OBJECT-TYPE
         configuration command.
         The remote user-name is sent as the server user-name
         in an rcp command request sent by the system to a
-        remote rcp server." 
+        remote rcp server."
     ::= { ciscoFlashCopyEntry 7 }
 
 ciscoFlashCopyStatus OBJECT-TYPE
@@ -1836,7 +1836,7 @@ ciscoFlashCopyStatus OBJECT-TYPE
                 failure unknown
 
         copyProhibited:
-              stop user from overwriting current boot image file." 
+              stop user from overwriting current boot image file."
     ::= { ciscoFlashCopyEntry 8 }
 
 ciscoFlashCopyNotifyOnCompletion OBJECT-TYPE
@@ -1851,7 +1851,7 @@ ciscoFlashCopyNotifyOnCompletion OBJECT-TYPE
         management entity to ensure that the SNMP administrative
         model is configured in such a way as to allow the
         notification to be delivered."
-    DEFVAL          { false } 
+    DEFVAL          { false }
     ::= { ciscoFlashCopyEntry 9 }
 
 ciscoFlashCopyTime OBJECT-TYPE
@@ -1865,7 +1865,7 @@ ciscoFlashCopyTime OBJECT-TYPE
         If a management entity keeps a database of completion
         times for various operations, it can then use the
         stopwatch capability to display percentage completion
-        time." 
+        time."
     ::= { ciscoFlashCopyEntry 10 }
 
 ciscoFlashCopyEntryStatus OBJECT-TYPE
@@ -1873,7 +1873,7 @@ ciscoFlashCopyEntryStatus OBJECT-TYPE
     MAX-ACCESS      read-create
     STATUS          current
     DESCRIPTION
-        "The status of this table entry." 
+        "The status of this table entry."
     ::= { ciscoFlashCopyEntry 11 }
 
 ciscoFlashCopyVerify OBJECT-TYPE
@@ -1889,7 +1889,7 @@ ciscoFlashCopyVerify OBJECT-TYPE
         fails, then the command will be aborted, and the file
         that is copied will be deleted from the destination
         file system."
-    DEFVAL          { false } 
+    DEFVAL          { false }
     ::= { ciscoFlashCopyEntry 12 }
 
 ciscoFlashCopyServerAddrType OBJECT-TYPE
@@ -1901,7 +1901,7 @@ ciscoFlashCopyServerAddrType OBJECT-TYPE
         address contained in
         ciscoFlashCopyServerAddrRev1. Optional.
         Will default to '1' (IPv4 address type)."
-    DEFVAL          { ipv4 } 
+    DEFVAL          { ipv4 }
     ::= { ciscoFlashCopyEntry 13 }
 
 ciscoFlashCopyServerAddrRev1 OBJECT-TYPE
@@ -1917,7 +1917,7 @@ ciscoFlashCopyServerAddrRev1 OBJECT-TYPE
 
         This object deprecates the old
         ciscoFlashCopyServerAddress object."
-    DEFVAL          { 'FFFFFFFF'H } 
+    DEFVAL          { 'FFFFFFFF'H }
     ::= { ciscoFlashCopyEntry 14 }
 
 ciscoFlashCopyRemotePassword OBJECT-TYPE
@@ -1929,13 +1929,13 @@ ciscoFlashCopyRemotePassword OBJECT-TYPE
         to/from an ftp/sftp/scp server. This object must be
         created when the ciscoFlashCopyProtocol is ftp, sftp or
         scp. Reading it returns a zero-length string for
-        security reasons." 
+        security reasons."
     ::= { ciscoFlashCopyEntry 15 }
- 
+
 
 
 ciscoFlashPartitioningTable OBJECT-TYPE
-    SYNTAX          SEQUENCE OF CiscoFlashPartitioningEntry 
+    SYNTAX          SEQUENCE OF CiscoFlashPartitioningEntry
     MAX-ACCESS      not-accessible
     STATUS          current
     DESCRIPTION
@@ -1980,7 +1980,7 @@ ciscoFlashPartitioningEntry OBJECT-TYPE
         entries from clogging the table, entries will be aged out,
         but an entry will never be deleted within 5 minutes of
         completing."
-    INDEX           { ciscoFlashPartitioningSerialNumber } 
+    INDEX           { ciscoFlashPartitioningSerialNumber }
     ::= { ciscoFlashPartitioningTable 1 }
 
 CiscoFlashPartitioningEntry ::= SEQUENCE {
@@ -2004,7 +2004,7 @@ ciscoFlashPartitioningSerialNumber OBJECT-TYPE
         operations table. A management station wishing to initiate
         a partitioning operation should use a pseudo-random value
         for this object when creating or modifying an instance of
-        a ciscoFlashPartitioningEntry." 
+        a ciscoFlashPartitioningEntry."
     ::= { ciscoFlashPartitioningEntry 1 }
 
 ciscoFlashPartitioningCommand OBJECT-TYPE
@@ -2030,7 +2030,7 @@ ciscoFlashPartitioningCommand OBJECT-TYPE
                                 PartitioningPartitionCount
                                 PartitioningPartitionSizes (opt)
                                 PartitioningNotifyOnCompletion (opt)"
-    DEFVAL          { partition } 
+    DEFVAL          { partition }
     ::= { ciscoFlashPartitioningEntry 2 }
 
 ciscoFlashPartitioningDestinationName OBJECT-TYPE
@@ -2042,7 +2042,7 @@ ciscoFlashPartitioningDestinationName OBJECT-TYPE
         obtained from FlashDeviceName.
         If the name is not specified, the default Flash device
         will be assumed."
-    DEFVAL          { ''B } 
+    DEFVAL          { ''B }
     ::= { ciscoFlashPartitioningEntry 3 }
 
 ciscoFlashPartitioningPartitionCount OBJECT-TYPE
@@ -2056,7 +2056,7 @@ ciscoFlashPartitioningPartitionCount OBJECT-TYPE
 
         To undo partitioning (revert to a single partition),
         this object must have the value 1."
-    DEFVAL          { 2 } 
+    DEFVAL          { 2 }
     ::= { ciscoFlashPartitioningEntry 4 }
 
 ciscoFlashPartitioningPartitionSizes OBJECT-TYPE
@@ -2080,7 +2080,7 @@ ciscoFlashPartitioningPartitionSizes OBJECT-TYPE
         sizes specified must exactly match the partition
         count. If not, the partitioning command will be
         rejected with the invalidPartitionSizes error ."
-    DEFVAL          { ''B } 
+    DEFVAL          { ''B }
     ::= { ciscoFlashPartitioningEntry 5 }
 
 ciscoFlashPartitioningStatus OBJECT-TYPE
@@ -2138,7 +2138,7 @@ ciscoFlashPartitioningStatus OBJECT-TYPE
                 system running low on memory
 
         partitioningUnknownFailure :
-                failure unknown" 
+                failure unknown"
     ::= { ciscoFlashPartitioningEntry 6 }
 
 ciscoFlashPartitioningNotifyOnCompletion OBJECT-TYPE
@@ -2153,7 +2153,7 @@ ciscoFlashPartitioningNotifyOnCompletion OBJECT-TYPE
         management entity to ensure that the SNMP administrative
         model is configured in such a way as to allow the
         notification to be delivered."
-    DEFVAL          { false } 
+    DEFVAL          { false }
     ::= { ciscoFlashPartitioningEntry 7 }
 
 ciscoFlashPartitioningTime OBJECT-TYPE
@@ -2167,7 +2167,7 @@ ciscoFlashPartitioningTime OBJECT-TYPE
         If a management entity keeps a database of completion
         times for various operations, it can then use the
         stopwatch capability to display percentage completion
-        time." 
+        time."
     ::= { ciscoFlashPartitioningEntry 8 }
 
 ciscoFlashPartitioningEntryStatus OBJECT-TYPE
@@ -2175,13 +2175,13 @@ ciscoFlashPartitioningEntryStatus OBJECT-TYPE
     MAX-ACCESS      read-create
     STATUS          current
     DESCRIPTION
-        "The status of this table entry." 
+        "The status of this table entry."
     ::= { ciscoFlashPartitioningEntry 9 }
- 
+
 
 
 ciscoFlashMiscOpTable OBJECT-TYPE
-    SYNTAX          SEQUENCE OF CiscoFlashMiscOpEntry 
+    SYNTAX          SEQUENCE OF CiscoFlashMiscOpEntry
     MAX-ACCESS      not-accessible
     STATUS          current
     DESCRIPTION
@@ -2225,7 +2225,7 @@ ciscoFlashMiscOpEntry OBJECT-TYPE
         entries from clogging the table, entries will be aged out,
         but an entry will never be deleted within 5 minutes of
         completing."
-    INDEX           { ciscoFlashMiscOpSerialNumber } 
+    INDEX           { ciscoFlashMiscOpSerialNumber }
     ::= { ciscoFlashMiscOpTable 1 }
 
 CiscoFlashMiscOpEntry ::= SEQUENCE {
@@ -2247,7 +2247,7 @@ ciscoFlashMiscOpSerialNumber OBJECT-TYPE
         table. A management station wishing to initiate a
         flash operation should use a pseudo-random value for
         this object when creating or modifying an instance of
-        a ciscoFlashMiscOpEntry." 
+        a ciscoFlashMiscOpEntry."
     ::= { ciscoFlashMiscOpEntry 1 }
 
 ciscoFlashMiscOpCommand OBJECT-TYPE
@@ -2301,7 +2301,7 @@ ciscoFlashMiscOpCommand OBJECT-TYPE
         squeeze         MiscOpDestinationName
                         MiscOpNotifyOnCompletion (opt)
         format          MiscOpDestinationName
-                        MiscOpNotifyOnCompletion (opt)" 
+                        MiscOpNotifyOnCompletion (opt)"
     ::= { ciscoFlashMiscOpEntry 2 }
 
 ciscoFlashMiscOpDestinationName OBJECT-TYPE
@@ -2331,7 +2331,7 @@ ciscoFlashMiscOpDestinationName OBJECT-TYPE
         command, this object would specify the partition name
         in the form:
                 [device>:][<partition>:]"
-    DEFVAL          { ''B } 
+    DEFVAL          { ''B }
     ::= { ciscoFlashMiscOpEntry 3 }
 
 ciscoFlashMiscOpStatus OBJECT-TYPE
@@ -2413,7 +2413,7 @@ ciscoFlashMiscOpStatus OBJECT-TYPE
                 a valid but nonexistent file name was specified
 
         miscOpFormatFailure :
-                the format operation failed" 
+                the format operation failed"
     ::= { ciscoFlashMiscOpEntry 4 }
 
 ciscoFlashMiscOpNotifyOnCompletion OBJECT-TYPE
@@ -2428,7 +2428,7 @@ ciscoFlashMiscOpNotifyOnCompletion OBJECT-TYPE
         management entity to ensure that the SNMP administrative
         model is configured in such a way as to allow the
         notification to be delivered."
-    DEFVAL          { false } 
+    DEFVAL          { false }
     ::= { ciscoFlashMiscOpEntry 5 }
 
 ciscoFlashMiscOpTime OBJECT-TYPE
@@ -2442,7 +2442,7 @@ ciscoFlashMiscOpTime OBJECT-TYPE
         If a management entity keeps a database of completion
         times for various operations, it can then use the
         stopwatch capability to display percentage completion
-        time." 
+        time."
     ::= { ciscoFlashMiscOpEntry 6 }
 
 ciscoFlashMiscOpEntryStatus OBJECT-TYPE
@@ -2450,9 +2450,9 @@ ciscoFlashMiscOpEntryStatus OBJECT-TYPE
     MAX-ACCESS      read-create
     STATUS          current
     DESCRIPTION
-        "The status of this table entry." 
+        "The status of this table entry."
     ::= { ciscoFlashMiscOpEntry 7 }
- 
+
 
 
 -- Configuration
@@ -2477,7 +2477,7 @@ ciscoFlashCfgDevInsNotifEnable OBJECT-TYPE
         ensure that the SNMP administrative model is
         configured in such a way as to allow the
         notification to be delivered."
-    DEFVAL          { false } 
+    DEFVAL          { false }
     ::= { ciscoFlashCfg 1 }
 
 ciscoFlashCfgDevRemNotifEnable OBJECT-TYPE
@@ -2500,7 +2500,7 @@ ciscoFlashCfgDevRemNotifEnable OBJECT-TYPE
         ensure that the SNMP administrative model is
         configured in such a way as to allow the
         notification to be delivered."
-    DEFVAL          { false } 
+    DEFVAL          { false }
     ::= { ciscoFlashCfg 2 }
 
 ciscoFlashPartitionLowSpaceNotifEnable OBJECT-TYPE
@@ -2525,7 +2525,7 @@ ciscoFlashPartitionLowSpaceNotifEnable OBJECT-TYPE
         It is the responsibility of the management entity to
         ensure that the SNMP administrative model is
         configured in such a way as to allow the
-        notifications to be delivered." 
+        notifications to be delivered."
     ::= { ciscoFlashCfg 3 }
 -- Traps (or notifications ??)
 
@@ -3155,7 +3155,7 @@ ciscoFlashMIBComplianceRev10 MODULE-COMPLIANCE
     GROUP           ciscoFlashDeviceOptionalInfoGroupRev1
     DESCRIPTION
         "The Flash device optional group contains objects for features
-        that may be optional or not available across all systems.       
+        that may be optional or not available across all systems.
         An example is the partitioning feature"
 
     GROUP           ciscoFlashPartitioningOpGroup
@@ -3219,7 +3219,7 @@ ciscoFlashMIBComplianceRev11 MODULE-COMPLIANCE
     GROUP           ciscoFlashDeviceOptionalInfoGroupRev1
     DESCRIPTION
         "The Flash device optional group contains objects for features
-        that may be optional or not available across all systems.       
+        that may be optional or not available across all systems.
         An example is the partitioning feature"
 
     GROUP           ciscoFlashPartitioningOpGroup
